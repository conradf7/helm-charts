---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.global.catalog.name}}-zone-bootstrap
  namespace: {{ .Release.Namespace }}
data:
  zone.json: |-
    {
      "serverAddress": "{{ .Values.global.control.name}}.{{ .Release.Namespace }}.svc:{{ .Values.global.control.port }}",
      "zoneName": "{{ .Values.global.zone }}",
      "requestCluster": "edge"
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.catalog.name}}-bootstrap-script
  namespace: {{ .Release.Namespace }}
data:
  bootstrap.sh: |-
{{ .Files.Get "config/bootstrap.sh" | indent 4 }}
---
{{- $top := . }}
{{- /* We loop over all the services to create the individual service objects */}}
{{- /*range $index, $service := .Values.catalog.services */}}
{{- range $name, $service := .Values.global.services }}
{{- if .catalogEnabled }}
---
{{- $scope := set $top "service" $service }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-{{.serviceName}}-catalog-api-config
  namespace: {{ $.Release.Namespace }}
data:
{{- range $path, $bytes := $top.Files.Glob "json/services/**.json" }}
  {{ base $path }}: |-
{{ tpl ($top.Files.Get $path) $scope | indent 4 }}
{{- end }}
...
{{- end }}
{{- end}}