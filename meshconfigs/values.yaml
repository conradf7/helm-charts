global:
  zone: zone-default-zone

waiter:                               
  image: deciphernow/k8s-waiter:latest
  service_account: 
    create: true
    name: waiter-sa

bootstrap:
  image: 'docker-dev.production.deciphernow.com/deciphernow/greymatter:1.2.0'
  secret:          
    enabled: true  
    secret_name: sidecar-certs
    mount_point: /certs
    insecure: true
    secret_keys:
      cert: server.crt
      key: server.key
      ca: ca.crt

services:
  catalog:
    catalogEnabled: true
    controlEnabled: true
    serviceName: 'catalog'
    observablesEnabled: false
    port: 9080
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentation: '/services/catalog/latest/'
    name: 'Grey Matter Catalog'
    owner: 'Decipher'
    version: 1.0.1
    minInstances: 1
    maxInstances: 1
    secret:          
      egressTLS: false
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt
    routes:
      - '/services/catalog/{{ $.Values.global.catalog.version }}'
      - '/services/catalog/{{ $.Values.global.catalog.version }}/'

  # control:
  #   name: 'Grey Matter Control'
  #   serviceName: 'control'
  #   routes:
  # - '/services/xds/{{ $.Values.global.xds.version }}'
  # - '/services/xds/{{ $.Values.global.xds.version }}'

  dashboard:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Dashboard'
    serviceName: 'dashboard'
    observablesEnabled: false
    port: 1337
    enableInstanceMetrics: 'true'
    capability: 'Apps'
    documentation: ''
    owner: 'Decipher'
    version: 3.3.1
    routes:
      - '/services/dashboard/latest'
      - '/services/dashboard/latest/'
    secret:          
      egressTLS: false
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt


  prometheus:
    catalogEnabled: false
    controlEnabled: true
    name: 'Prometheus'
    serviceName: 'prometheus'
    observablesEnabled: false
    port: 9090
    secret:          
      egressTLS: false

  data:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Data'
    serviceName: 'data'
    observablesEnabled: false
    port: 8181
    enableInstanceMetrics: 'true'
    capability: 'Data'
    documentation: '/services/data/latest/static/ui/index.html'
    owner: 'Decipher'
    version: 1.0.0
    routes:
      - '/services/data/{{ $.Values.global.data.version }}'
      - '/services/data/{{ $.Values.global.data.version }}/'
    secret:          
      egressTLS: false
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  internal-data:
    catalogEnabled: false
    controlEnabled: true
    name: 'Grey Matter Internal Data'
    serviceName: 'data-internal'
    observablesEnabled: false
    port: 8181
    enableInstanceMetrics: "true" 
    capability: 'Data'
    documentation: '/services/data/latest/static/ui/index.html'
    name: 'Grey Matter Internal Data'
    owner: 'Decipher'
    version: 1.0.0
    secret:          
      egressTLS: false
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  jwt:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter JWT Security'
    serviceName: 'jwt-security'
    observablesEnabled: false
    port: 3000
    enableInstanceMetrics: 'true'
    capability: 'Security'
    documentation: ''
    owner: 'Decipher'
    version: '0.2.0'
    routes:
      - '/services/jwt-security/{{ $.Values.global.jwt.version }}'
      - '/services/jwt-security/{{ $.Values.global.jwt.version }}/'
    secret:          
      egressTLS: false
      enabled: true  
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  internal-jwt:
    catalogEnabled: false
    controlEnabled: true
    name: 'Grey Matter JWT Security Internal'
    serviceName: 'internal-jwt-security'
    observablesEnabled: false
    port: 3000
    enableInstanceMetrics: 'true'
    capability: 'Grey Matter'
    documentation: ''
    owner: 'Decipher'
    version: '0.2.0'
    secret:          
      enabled: true  
      egressTLS: false
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  controlApi:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Control API'
    serviceName: 'gm-control-api'
    observablesEnabled: false
    port: 5555
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentation:
    owner: 'Decipher'
    version: '1.1.0'
    routes:
      - '/services/control-api/{{ $.Values.global.gmControlApi.version }}'
      - '/services/control-api/{{ $.Values.global.gmControlApi.version }}/'
    secret:          
      enabled: true  
      egressTLS: false
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  edge:
    catalogEnabled: true
    controlEnabled: false
    name: 'Grey Matter Edge'
    serviceName: 'edge'
    observablesEnabled: false
    port: 8080
    # This is the DN of the new certificate issued to the edge for internal mesh communication. It needs to be whitelisted by the proxies
    egressDn: C=US,ST=Virginia,L=Alexandria,O=Decipher Technology Studios,OU=Engineering,CN=edge
    # We use a static cert on the edge listener
    removeListenerSecret: true
    enableInstanceMetrics: 'true'
    capability: 'Mesh'
    documentatio: ''
    owner: 'Decipher'
    version: '1.0.0'
    secret:          
      enabled: true  
      egressTLS: false
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt

  slo:
    catalogEnabled: true
    controlEnabled: true
    name: 'Grey Matter Service Level Objectives'
    serviceName: 'slo'
    observablesEnabled: false
    port: 1337
    # egressTLS: 'false'
    enableInstanceMetrics: 'true'
    capability: 'Sense'
    documentation:
    owner: 'Decipher'
    version: '1.1.1'
    routes:
      - '/services/slo/{{ $.Values.global.slo.version }}'
      - '/services/slo/{{ $.Values.global.slo.version }}/'
    secret:          
      enabled: true  
      egressTLS: false
      secret_name: sidecar-certs
      mount_point: /certs
      insecure: true
      secret_keys:
        cert: server.crt
        key: server.key
        ca: ca.crt
