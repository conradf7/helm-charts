{{- if and .Values.data.deploy.standalone .Values.data.deploy.control_api.apply }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.data.name}}-standalone-configs-init
  annotations:
    # Run this job after an install or an upgrade
    "helm.sh/hook": post-install,post-upgrade
    # If a job with this name already exists, delete it before running this one
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ .Values.data.name}}-standalone-configs-init
    spec:
      restartPolicy: "Never"
      # We need a SA with read access to the `Endpoints` resource
      serviceAccountName: {{ .Values.global.waiter.service_account.name }}
      initContainers:
        - name: ensure-gm-control-api
          image: {{ .Values.global.waiter.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              value: {{ .Values.data.deploy.control_api.namespace }}
            - name: SERVICE
              value: {{ .Values.data.deploy.control_api.name }}
      containers:
        - image: {{ tpl .Values.bootstrap.image . }}
          name: {{ .Values.data.name }}-init
          imagePullPolicy: {{ .Values.bootstrap.image_pull_policy }}
          command: ["/tmp/bootstrap/bootstrap.sh"]
          env:
          {{- include "data.envvars" (dict "envvar" .Values.bootstrap.envvars "top" $) | indent 10 }}
          volumeMounts:
            {{- if .Values.data.deploy.control_api.secret }}
            - name: service-certs
              mountPath: {{ .Values.bootstrap.secret.mount_point }}
            {{- end }}
            - name: service-config-volume-{{ .Values.data.name }}
              mountPath: /etc/config/mesh/service/{{ .Values.data.name }}
            - name: edge-config-volume-{{ .Values.data.name }}
              mountPath: /etc/config/mesh/edge/{{ .Values.data.name }}
            - name: special-config-volume
              mountPath: /etc/config/mesh/special
            - name: bootstrap-script-volume
              mountPath: /tmp/bootstrap
      volumes:
        {{- if .Values.data.deploy.control_api.secret }}
        - name: service-certs
          secret:
            {{- if .Values.global.global_certs.enabled }}
            secretName: global-certs
            {{- else }}
            secretName: {{ .Values.bootstrap.secret.secret_name }}
            {{- end }}
        {{- end }}
        - name: service-config-volume-{{ .Values.data.name }}
          configMap:
            name: service-{{ .Values.data.name }}-mesh-config
        - name: edge-config-volume-{{ .Values.data.name }}
          configMap:
            name: edge-{{ .Values.data.name }}-mesh-config
        - name: bootstrap-script-volume
          configMap:
            name: bootstrap-script-data-standalone
            defaultMode: 0777
        - name: special-config-volume
          configMap:
            name: special-mesh-config-{{ .Values.data.name }}
      imagePullSecrets:
        - name: {{ .Values.global.image_pull_secret }}

{{- end }}